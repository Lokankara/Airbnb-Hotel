name: Running Tests

on: [push]

permissions:
    checks: write

jobs:
    Test:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        services:
            postgres:
                image: postgres:15
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: root
                    POSTGRES_DB: airbnb
                options: >-
                    --health-cmd "pg_isready -U postgres"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 5432:5432

        env:
            SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/airbnb
            SPRING_DATASOURCE_USERNAME: postgres
            SPRING_DATASOURCE_PASSWORD: root
            DB_NAME: airbnb

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Install psql client and tools
              run: sudo apt-get update && sudo apt-get install --yes --no-install-recommends postgresql-client

            - name: Wait for Postgres to be ready
              run: |
                  echo "Waiting for Postgres..."
                  until pg_isready -h localhost -p 5432 -U "${{ env.SPRING_DATASOURCE_USERNAME }}" >/dev/null 2>&1; do
                    sleep 1
                  done
                  echo "Postgres is ready."
              env:
                  PGPASSWORD: ${{ env.SPRING_DATASOURCE_PASSWORD }}

            - name: Initialize database schema from SQL files
              run: |
                  set -eu
                  SQL_DIR="Airbnb/src/main/resources/db"
                  if [ ! -d "$SQL_DIR" ]; then
                    echo "SQL directory $SQL_DIR not found" >&2
                    exit 1
                  fi
                  for f in "$SQL_DIR"/*.sql; do
                    echo "Applying $f"
                    psql -h localhost -U "${{ env.SPRING_DATASOURCE_USERNAME }}" -d "${{ env.DB_NAME }}" -v ON_ERROR_STOP=1 -f "$f"
                  done
              env:
                  PGPASSWORD: ${{ env.SPRING_DATASOURCE_PASSWORD }}

            - name: Set up JDK 21
              uses: actions/setup-java@v3
              with:
                  java-version: '21'
                  distribution: 'temurin'
                  cache: maven

            - name: Test with Maven
              run: mvn -B -e -V test
